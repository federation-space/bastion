#!/usr/bin/env bash
set -eo pipefail

cmd_version() {
    git describe --always --dirty --broken
}

cmd_usage() {
	cat <<-_EOF
	Usage:
	    $PROGRAM init
	        Initialize a new homeserver deployment. Meant to be invoked
	        interactively.
	    $PROGRAM pair client-name
	        Pair a new client to the homeserver. Meant to be invoked interactively.
	    $PROGRAM unpair client-name
	        Unpair an existing client from the homeserver.
	    $PROGRAM deploy
	        Deploy the current configuration to the homeserver.
	    $PROGRAM help
	        Show this text.
	    $PROGRAM version
	        Show version information.
	_EOF
}

cmd_update() {
    git pull
    echo "hsctl updated to: $(cmd_version)"
    "$LIBEXEC_DIR"/hsctl-init "$@"
}

cmd_needs_init() {
    "$LIBEXEC_DIR"/hsctl-init
    case "$1" in
	      pair|add) shift;	"$LIBEXEC_DIR"/pair-client "$@" ;; # $0 NAME
	      unpair|rm|remove) shift;	"$LIBEXEC_DIR"/rm-client "$@" ;; # $0 NAME
	      deploy) shift;			"$LIBEXEC_DIR"/deploy "$@" ;;
	      reboot|info|list|show-arguments|set-args|ssh)			"$LIBEXEC_DIR"/nixops-wrapper "$@" ;;
	      # ssh) 		    "$LIBEXEC_DIR"/nixops-wrapper "$@" homeserver ;;
	      *)				cmd_usage "$@" ; exit 42 ;;
    esac
}

LIBEXEC_DIR="${LIBEXEC_DIR:-$(dirname "${BASH_SOURCE[0]}")/libexec}"
PROGRAM="${0##*/}"
COMMAND="$1"

tmp_rel="$(realpath --relative-to="$PWD" "$LIBEXEC_DIR")"
if [ "$tmp_rel" != "bin/libexec" ]; then
    echo "Please execute 'hsctl' from the base of the git repository" >&2
    exit 1
fi

case "$1" in
	  init) shift;			"$LIBEXEC_DIR"/hsctl-init "$@" ;; # $0
	  help|--help|-h) shift;				cmd_usage "$@" ;;
    version|--version|-v) shift;	cmd_version "$@" ;;
	  update) shift;			cmd_update "$@" ;;
	  *)				cmd_needs_init "$@" ;;
esac
exit 0
